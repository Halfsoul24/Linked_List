/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        
        ListNode* temp = head;
        int count=1;
        while(temp->next!=NULL){
            count++;
            temp=temp->next;
        }
        int len = count-n+1;
        
        ListNode* node = head;
        
        int i=1;
        while(i<len-1){
            
            node=node->next;
            i++;
        }
        
        if(len==1){
            head = node->next;
        }
        // cout<<node->val<<endl;
        if(node->next!=NULL){
            // cout<<"he;;";
             node->next = node->next->next;
        }
        else{
            node->next = NULL;
        }
       
        return head;
    }
};
